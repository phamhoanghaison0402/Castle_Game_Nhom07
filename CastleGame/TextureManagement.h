#ifndef _RESOURCEMANAGEMENT_H_
#define _RESOURCEMANAGEMENT_H_

#include <map>
#include "BaseObject.h"
#include "DirectXGame.h"


enum EOTexture
{
	//ENEMY
	DOI_TEXTURE,
	ECH_TEXTURE,
	CONMA_TEXTURE,
	BOSSMAP1_TEXTURE,
	CHO_TEXTURE,
	LINHCANH_TEXTURE,
	NGUOIECH_TEXTURE,
	DAULAU_TEXTURE,
	DAUQUAI_TEXTURE,
	BANCHONG_TEXTURE,

	//
	//ENEMY
	DAYCHUYEN_TEXTURE,
	NUOCTHANH_TEXTURE,
	DUIGA_TEXTURE,
	TUITIENTRANG_TEXTURE,
	TUITIENXANH_TEXTURE,
	TRAITIMLON_TEXTURE,
	TRAITIMNHO_TEXTURE,
	RUONG_TEXTURE,
	VUONGMIENG_TEXTURE,
	BINHVANG_TEXTURE,
	NGOC_TEXTURE,
	//

	BACKGROUND_TEXTURE,
	BEGINBACKGROUND_TEXTURE,
	ABOUTBACKGROUND_TEXTURE,
	SETTINGBACKGROUND_TEXTURE,

	SOUNDLABEL_TEXTURE,
	SOUNDOPTION_TEXTURE,
	VOLUME_TEXTURE,

	BAR_TEXTURE,
	BLOCK_TEXTURE,
	BRICK_TEXTURE,
	BULLET_TEXTURE,
	CARNIVOROUSFLOWER_TEXTURE,

	CLOUD_TEXTURE,
	COIN_TEXTURE,
	ENEMY_TEXTURE,
	EXPLOREDBRICK_TEXTURE,

	FIREWORKS_TEXTURE,
	FLAGPOLE_TEXTURE,
	FLOWER_TEXTURE,
	GAMEOVERSCREEN_TEXTURE,

	HEIGHTMARIO_TEXTURE,
	HORIZONTALPIPE_TEXTURE,
	LAMP_TEXTURE,
	LAND_TEXTURE,
	MACHINEBULLET_TEXTURE,
	MACHINE_TEXTURE,
	MARIOICON_TEXTURE,

	MOUNTAIN_TEXTURE,
	MUSHROOM_TEXTURE,
	NUMBER_TEXTURE,
	PAUSEMENU_TEXTURE,
	PIPE_TEXTURE,

	SECRETBLOCK_TEXTURE,
	SIGN_TEXTURE,
	SMALLMARIO_TEXTURE,
	SPRING_TEXTURE,
	STAR_TEXTURE,

	STARTMENU_TEXTURE,
	SUPERMATIO_TEXTURE,
	TOWER_TEXTURE,
	TREE_TEXTURE,
	TREE2_TEXTURE,

	TURTLE_TEXTURE,
	TURTLE2_TEXTURE,
	WAITSCREEN_TEXTURE,
	WORLD_TEXTURE,

	// orther 
	BACKGROUND_BLUE_TEXTURE,
	CAUTHANG_TEXTURE,
	CANHCUA_TEXTURE,
	DAUTRU_TEXTURE,
	GACHDEN_TEXTURE,
	GACHDEN_TRAI_TEXTURE,
	GACHDO_TEXTURE,
	GACHDO_XAM_TEXTURE,
	GACHGIUA_DAUTRU_TEXTURE,
	NENGACH_TEXTURE,
	NENGACH_TRAI_TEXTURE,
	NGONDUOC_TEXTURE,
	NGONNEN_TEXTURE,
	THANHTRUOT_TEXTURE,
	TRU_TEXTURE,
	TRUTIM_1_TEXTURE,
	TRUTIM_2_TEXTURE,
	TRUTIM_3_TEXTURE,
};


class TextureManagement
{
private:
	map<EOTexture, DXTexture *> _ListTexture;
	
	static TextureManagement _instance;
	TextureManagement() { };
public:
	static TextureManagement* GetInstance()
	{
		return &_instance;
	};

	bool Add(LPDIRECT3DDEVICE9 d3dDevice, EOTexture type, char *path);
	bool Add(LPDIRECT3DDEVICE9 d3dDevice, EOTexture type, char *path, int nHor, int nVer);
	void AddAll(LPDIRECT3DDEVICE9 d3dDevice);
	DXTexture* Get(EOTexture name);
	EOTexture Get(DXTexture *);
};

#endif